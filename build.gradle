buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'forge'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.mod_group

minecraft {
    version = "${minecraft_version}-${forge_version}-${minecraft_version}"
    mappings = mappings_version
    runDir = "run"
    String resolved_core_plugin = mod_core_plugin.replace('${mod_group}', mod_group).replace('${mod_id}', mod_id)
    String resolved_core_config = mod_mixin_configs.replace('${mod_id}', mod_id)

}

def refMap = "${tasks.compileJava.temporaryDir}" + File.separator + mod_mixin_refmap.replace('${mod_id}', mod_id)
def mixinSrg = "${tasks.reobf.temporaryDir}" + File.separator + "mixins.srg"
afterEvaluate {
    tasks.compileJava.options.compilerArgs += ["-AreobfSrgFile=${tasks.reobf.srg}", "-AoutSrgFile=${mixinSrg}", "-AoutRefMapFile=${refMap}"]
}

reobf {
    addExtraSrgFile mixinSrg
}

repositories {
    maven { url "https://maven.shedaniel.me" }
    maven { url "https://maven.architectury.dev/" }
    maven { url "https://dvs1.progwml6.com/files/maven/" }
    maven { url = "https://repo.spongepowered.org/maven" }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft_version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'infinity-water-bucket.mixins.json'
                
        expand 'version':project.version, 'mcversion':project.minecraft_version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from(configurations.embed.collect {
        it.isDirectory() ? it : zipTree(it)
    }) {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    from refMap

    manifest {
        attributes "FMLCorePlugin": mod_core_plugin.replace('${mod_group}', mod_group).replace('${mod_id}', mod_id)
        attributes "FMLCorePluginContainsFMLMod": "false"
        attributes "ForceLoadAsMod": "true"
        attributes "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
        attributes "TweakOrder": "0"
        attributes "MixinConfigs": mod_mixin_configs.replace('${mod_id}', mod_id)
    }
}

task packDev(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.allJava
    baseName = "Infinity-Water-Bucket-Dev"
    version = "${project.minecraft_version}-${project.version}"

    println(defaultTasks)
}

reobf {
    addExtraSrgFile mixinSrg
}

artifacts {
    archives packDev
}