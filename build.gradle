plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
}

repositories {
    maven {
        name = 'legacy-fabric'
        url = 'https://maven.legacyfabric.net'
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceSets.main.java.srcDirs += 'java'
sourceSets.main.resources.srcDirs += 'resources'

minecraft {
    intermediaryUrl = {
        return "https://maven.legacyfabric.net/net/fabricmc/intermediary/" + it + "/intermediary-" + it + "-v2.jar";
    }
}

def lwjglVersion = System.getProperty("os.name").toLowerCase().contains("mac") ? "2.9.1" : "2.9.0"

dependencies {
    implementation 'org.apache.logging.log4j:log4j-core:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'

    implementation "org.lwjgl.lwjgl:lwjgl_util:${lwjglVersion}"
    implementation "org.lwjgl.lwjgl:lwjgl:${lwjglVersion}"
    implementation "org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}"

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    implementation fileTree(dir: 'libs', include: '*.jar')

}

configurations.all {
	resolutionStrategy {
		dependencySubstitution {
			substitute module('org.lwjgl.lwjgl:lwjgl_util:2.9.1-nightly-20130708-debug3') with module("org.lwjgl.lwjgl:lwjgl_util:${lwjglVersion}")
			substitute module('org.lwjgl.lwjgl:lwjgl:2.9.1-nightly-20130708-debug3') with module("org.lwjgl.lwjgl:lwjgl:${lwjglVersion}")
		}
		force "org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}"
	}
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    it.options.encoding = "UTF-8"
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = 8
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

task packDev(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.allJava
    classifier = "Dev"
    version = "${project.version}"

    println(defaultTasks)
}

artifacts {
    archives packDev
}